// Coleta dados analogicos do conversor AD, calcula amplitude e
// fase, e envia os dados calculados pela serial.
// A taxa de amostragem eh controlada por um Timer via hardware
// O programa funciona da seguinte forma:
//   - inicia a coleta no setup();
//   - ao completar o buffer, pausa o timer e liga a flag_lido;
//   - transmite os dados calculados (e/ou coletados) por Serial;
//   - aguarda 1000ms e reinicia o Timer e, com isso, a coleta.


#include <HardwareTimer.h>
#include <STM32ADC.h>

#define pinLED  PC13 // LED interno da placa

bool flag_envia_curva = false;

// Channels to be acquired.
// A0 (adc1 channel 1)
uint8 pins = 0;

#define maxSamples  500 // Numero de amostras a serem lidas de cada vez
uint16_t buffer[maxSamples];
uint8_t flag_lido;
uint16_t contador;
uint16_t a[maxSamples];

uint16_t contador_medidas;
float amplitude;
float fase;

#define numero_medidas 476 // numero de medidas usadas na demodulacao (tem que ser nro inteiro de ciclos)

float piE[3][476]{ // piE para f_amostragem=500kHz; f_sinal=20kHz
    {0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, -0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, -0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, -0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, 0.001047, 0.002028, 0.002882, 0.003555, 0.004004, 0.004202, 0.004136, 0.003810, 0.003244, 0.002475, 0.001550, 0.000528, -0.000528, -0.001550, -0.002475, -0.003244, -0.003810, -0.004136, -0.004202, -0.004004, -0.003555, -0.002882, -0.002028, -0.001047, 0.000000, },
    {0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, 0.004052, 0.003665, 0.003048, 0.002238, 0.001287, 0.000254, -0.000794, -0.001794, -0.002681, -0.003401, -0.003907, -0.004169, -0.004169, -0.003907, -0.003401, -0.002681, -0.001794, -0.000794, 0.000254, 0.001287, 0.002238, 0.003048, 0.003665, 0.004052, 0.004184, },
    {0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, 0.002092, 0.002093, 0.002094, 0.002096, 0.002098, 0.002100, 0.002103, 0.002105, 0.002106, 0.002108, 0.002109, 0.002110, 0.002110, 0.002109, 0.002108, 0.002106, 0.002105, 0.002103, 0.002100, 0.002098, 0.002096, 0.002094, 0.002093, 0.002092, 0.002092, },
};

// seno teste: amplitude=1000; fase=0.1; 476 pontos
//uint16_t buffer2[] = { 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, 1844, 2067, 2254, 2394, 2477, 2499, 2459, 2358, 2203, 2004, 1773, 1526, 1276, 1041, 834, 670, 557, 504, 513, 585, 713, 892, 1108, 1349, 1600, }; 

// seno teste: amplitude=1000; fase=-1; 476 pontos
//uint16_t buffer2[] = {659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, 819, 1023, 1256, 1505, 1754, 1986, 2188, 2347, 2453, 2498, 2481, 2403, 2267, 2083, 1863, 1620, 1369, 1127, 908, 726, 593, 517, 502, 551, 659, };

#define sampleFreqKhz       500
#define samplePeriodus      1000 / sampleFreqKhz
#define ticksPerSecond      2 * sampleFreqKhz * 1000 / maxSamples

// este union é apenas para facilitar a conversao do seno e cosseno entre binario e float:
typedef union {
    float floatingPoint;
    byte binary[4];
} binaryFloat;

// declaracao das variaveis que podem ser usadas como byte ou como float:
binaryFloat seno;
binaryFloat cosseno;

STM32ADC myADC(ADC1);

void TimerIRQ(void) { // O timer serve soh como trigger do ADC... 1 a cada amostra
}

void DmaIRQ(void) { // Completou o buffer...
    Timer3.pause();
    flag_lido = 1;
    digitalWrite(pinLED, ! digitalRead(pinLED)); // altera estado do LED
}

void setup() {
    pinMode(pinLED, OUTPUT);
    pinMode(pins, INPUT_ANALOG);
    
    Serial.begin(115200);
    
    flag_lido = 0;
    contador = 0;
    
    Timer3.setPeriod(samplePeriodus);
    Timer3.setMasterModeTrGo(TIMER_CR2_MMS_UPDATE);
    
    myADC.calibrate();
    myADC.setSampleRate(ADC_SMPR_1_5); // a cada trigger, a conversao eh feita o mais rapido possivel.
                         // Talvez de para diminuir para melhorar acuracia da medida.
    myADC.setPins(&pins, 1);
    
    // Configurando DMA com:
    // - DMA_MINC_MODE: Auto-increment memory address
    // - DMA_CIRC_MODE: Circular mode
    // - DMA_TRNS_CMPLT: Interrupt on transfer completion
    myADC.setDMA(buffer, maxSamples, (DMA_MINC_MODE | DMA_CIRC_MODE | DMA_TRNS_CMPLT), DmaIRQ);
    
    myADC.setTrigger(ADC_EXT_EV_TIM3_TRGO); // ajusta Timer3 como trigger
    myADC.startConversion();
}

void loop() {

    if (flag_lido == 1) 
    {
        // process data
        int nn;
        int ntotal = maxSamples;
        if (flag_envia_curva)
        {
            for (nn=0; nn<ntotal; nn++)
            {
                Serial.println(buffer[nn]); // Envia dados pela serial como ASCII, para ser visto com o 'Plotter Serial'
            }
        }
        int i;
        seno.floatingPoint = 0;
        cosseno.floatingPoint = 0;
        for (i = 0; i < numero_medidas; i++) 
        { // esta eh a multiplicação feita no matlab
            seno.floatingPoint += ((float)buffer[i])*((float)piE[0][i]);
            cosseno.floatingPoint += ((float)buffer[i])*((float)piE[1][i]);
        } 

        Serial.print("seno: ");
        Serial.println(seno.floatingPoint);
        Serial.print("cosseno: ");
        Serial.println(cosseno.floatingPoint);
        amplitude = sqrt(seno.floatingPoint*seno.floatingPoint + cosseno.floatingPoint*cosseno.floatingPoint);
        fase = atan2(cosseno.floatingPoint,seno.floatingPoint);    
        Serial.print("amplitude: ");
        Serial.println(amplitude);
        Serial.print("fase: ");
        Serial.println(fase); 
        
        flag_lido=0;
        delay(1000); // aguarda 1000ms (1s)
        Timer3.resume(); // reinicia o timer e o ADC
    }
}
